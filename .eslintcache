[{"C:\\Users\\user\\WebstormProjects\\blog\\src\\index.tsx":"1","C:\\Users\\user\\WebstormProjects\\blog\\src\\reportWebVitals.ts":"2","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\redux-store.ts":"3","C:\\Users\\user\\WebstormProjects\\blog\\src\\App.tsx":"4","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts":"5","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts":"6","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\profile-reducer.ts":"7","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts":"8","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-container.tsx":"9","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts":"10","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\users-api.ts":"11","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts":"12","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\selectors.ts":"13","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx":"14","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments.tsx":"15","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article.tsx":"16","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\paginator.tsx":"17","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx":"18","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\login\\login.tsx":"19","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\navbar\\navbar.tsx":"20","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\write\\write.tsx":"21","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\signup\\signup.tsx":"22","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\error\\error.tsx":"23","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\menu.tsx":"24","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\profile.tsx":"25","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\user-info.tsx":"26"},{"size":567,"mtime":1613808397575,"results":"27","hashOfConfig":"28"},{"size":438,"mtime":1613808397584,"results":"29","hashOfConfig":"28"},{"size":858,"mtime":1613812653619,"results":"30","hashOfConfig":"28"},{"size":1290,"mtime":1613918551895,"results":"31","hashOfConfig":"28"},{"size":2521,"mtime":1613825774866,"results":"32","hashOfConfig":"28"},{"size":1102,"mtime":1613824928851,"results":"33","hashOfConfig":"28"},{"size":1970,"mtime":1613917510202,"results":"34","hashOfConfig":"28"},{"size":2262,"mtime":1613892127940,"results":"35","hashOfConfig":"28"},{"size":2102,"mtime":1613918280616,"results":"36","hashOfConfig":"28"},{"size":1485,"mtime":1614005618141,"results":"37","hashOfConfig":"28"},{"size":1899,"mtime":1613993076267,"results":"38","hashOfConfig":"28"},{"size":182,"mtime":1613836047706,"results":"39","hashOfConfig":"28"},{"size":601,"mtime":1613906611232,"results":"40","hashOfConfig":"28"},{"size":689,"mtime":1613935722351,"results":"41","hashOfConfig":"28"},{"size":1391,"mtime":1613824928875,"results":"42","hashOfConfig":"28"},{"size":1577,"mtime":1613918280644,"results":"43","hashOfConfig":"28"},{"size":1237,"mtime":1613933828951,"results":"44","hashOfConfig":"28"},{"size":243,"mtime":1613901653312,"results":"45","hashOfConfig":"28"},{"size":2259,"mtime":1613979994530,"results":"46","hashOfConfig":"28"},{"size":2043,"mtime":1613934986782,"results":"47","hashOfConfig":"28"},{"size":1970,"mtime":1613977556834,"results":"48","hashOfConfig":"28"},{"size":3233,"mtime":1613993076202,"results":"49","hashOfConfig":"28"},{"size":444,"mtime":1613905107189,"results":"50","hashOfConfig":"28"},{"size":1523,"mtime":1613918050591,"results":"51","hashOfConfig":"28"},{"size":2797,"mtime":1614011106727,"results":"52","hashOfConfig":"28"},{"size":2021,"mtime":1613918050551,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"f8uwsg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},"C:\\Users\\user\\WebstormProjects\\blog\\src\\index.tsx",[],["112","113"],"C:\\Users\\user\\WebstormProjects\\blog\\src\\reportWebVitals.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\redux-store.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\App.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\profile-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-container.tsx",["114"],"import {\r\n    ActionsType,\r\n    addComment,\r\n    changeArticle,\r\n    getArticle,\r\n    getArticleComments\r\n} from \"../../redux/reducers/article-reducer\"\r\nimport React, {useEffect, useState} from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport Article from \"./article\"\r\nimport Comments from \"./comments\"\r\nimport Preloader from \"../preloader/preloader\"\r\nimport {DispatchType} from \"../../redux/common-types\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getArticleCommentsSelector, getArticleSelector, getCurrentUserSelector} from \"../../redux/selectors\";\r\nimport Error from \"../error/error\";\r\n\r\n\r\nfunction ArticleContainer() {\r\n    const [isLoadingArticle, setArticleLoading] = useState(true)\r\n    const [areLoadingComments, setCommentsLoading] = useState(true)\r\n\r\n    const dispatch: DispatchType<ActionsType> = useDispatch()\r\n    const articleId = Number(useParams<{ articleId: string }>().articleId)\r\n    const article = useSelector(getArticleSelector)\r\n    const comments = useSelector(getArticleCommentsSelector)\r\n    const user = useSelector(getCurrentUserSelector)\r\n    const isOwner = article.author === user.username\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticle(articleId)).then(() => {\r\n            setArticleLoading(false)\r\n        })\r\n        dispatch(getArticleComments(articleId)).then(() => {\r\n            setCommentsLoading(false)\r\n        })\r\n    }, [articleId])\r\n\r\n\r\n    function handleCommentAddButtonClick(commentText: string) {\r\n        dispatch(addComment(articleId, commentText))\r\n    }\r\n\r\n    function handleArticleSave(text: string) {\r\n        dispatch(changeArticle(articleId, text))\r\n    }\r\n\r\n\r\n    if (isLoadingArticle || areLoadingComments) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!article.id) {\r\n        return <Error/>\r\n    }\r\n\r\n    return <div>\r\n        <Article article={article} changeArticle={handleArticleSave} isOwner={isOwner}/>\r\n        <Comments comments={comments} addComment={handleCommentAddButtonClick}\r\n                  isAuthenticated={user.isAuthenticated}/>\r\n    </div>\r\n}\r\n\r\nexport default ArticleContainer","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\users-api.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\selectors.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\paginator.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\login\\login.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\navbar\\navbar.tsx",["115","116"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {ActionsType, getUserInfo, logoutUser} from '../../redux/reducers/auth-reducer'\r\nimport {DispatchType} from '../../redux/common-types'\r\nimport cn from \"classnames\";\r\nimport s from \"./navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {getCurrentUserSelector} from \"../../redux/selectors\";\r\n\r\n\r\nfunction NavigationContainer() {\r\n    const [buttonText, setButtonText] = useState('>')\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n    const dispatch = useDispatch<DispatchType<ActionsType>>()\r\n    const user = useSelector(getCurrentUserSelector)\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dispatch(getUserInfo()).then(() => setLoading(false))\r\n    }, [])\r\n\r\n\r\n    function handleClick() {\r\n        if (buttonText === '>') {\r\n            setButtonText('<')\r\n        } else {\r\n            setButtonText('>')\r\n        }\r\n    }\r\n\r\n    function handleLogoutClick() {\r\n        dispatch(logoutUser())\r\n    }\r\n\r\n    if(isLoading){\r\n        return <></>\r\n    }\r\n\r\n    return <>\r\n        <div className={cn({[s.non_active]: buttonText === '>'}, s.nav)}>\r\n            <button onClick={handleClick}>{buttonText}</button>\r\n            {user.photo && <img src={user.photo}/>}\r\n            <NavLink to='/menu' activeClassName={s.active}>Menu</NavLink>\r\n            {(user.isAuthenticated)\r\n                ? <>\r\n                    <NavLink to='/write' activeClassName={s.active}>Write</NavLink>\r\n                    <NavLink to={'/profile/' + user.username} activeClassName={s.active}>Profile</NavLink>\r\n                    <NavLink to='/menu' onClick={handleLogoutClick}>Log Out</NavLink>\r\n\r\n                </>\r\n                : <>\r\n                    <NavLink to='/login' activeClassName={s.active}>Log in</NavLink>\r\n                    <NavLink to='/signup' activeClassName={s.active}>Sign up</NavLink>\r\n                </>}\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default NavigationContainer","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\write\\write.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\signup\\signup.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\error\\error.tsx",["117"],"import Photo from './error-photo.jpg'\r\nimport s from './error.module.css'\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nfunction Error() {\r\n    const history = useHistory()\r\n\r\n    function handleClick() {\r\n        history.push('/menu')\r\n    }\r\n\r\n\r\n    return <div>\r\n        <img src={Photo} alt=\"photo\" className={s.img} />\r\n        <button className={s.button} onClick={handleClick}>GET TO MENU</button>\r\n    </div>\r\n}\r\n\r\nexport default Error","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\menu.tsx",["118"],"import {useDispatch, useSelector} from 'react-redux'\r\nimport {ActionsType, getArticlesOfPage} from '../../redux/reducers/menu-reducer'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Preloader from '../preloader/preloader'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {DispatchType} from '../../redux/common-types'\r\nimport Post from \"./post\";\r\nimport {ArticleType} from \"../../redux/common-types\";\r\nimport Paginator from \"./paginator\";\r\nimport {getArticlesCountSelector, getArticlesOfCurrentPageSelector} from \"../../redux/selectors\";\r\nimport Error from \"../error/error\";\r\n\r\n\r\nfunction Menu() {\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    const dispatch = useDispatch<DispatchType<ActionsType>>()\r\n    const articles = useSelector(getArticlesOfCurrentPageSelector)\r\n    const articlesCount = useSelector(getArticlesCountSelector)\r\n    const location = useLocation()\r\n    const currentPage = parseInt(location.search.slice(6)) || 1\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dispatch(getArticlesOfPage(currentPage)).then(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [currentPage])\r\n\r\n    if(isLoading) {\r\n        return <Preloader />\r\n    }\r\n\r\n    if(!articlesCount) {\r\n        return <Error />\r\n    }\r\n\r\n    return <>\r\n            {articles.map((article: ArticleType) =>\r\n                <Post key={article.id} article={article}/>)}\r\n            <Paginator currentPage={currentPage} count={articlesCount} pageSize={5}/>\r\n        </>\r\n}\r\n\r\nexport default Menu","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\profile.tsx",["119","120"],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\user-info.tsx",["121"],"import React from \"react\";\r\nimport {ChangeEvent, useRef, useState} from \"react\";\r\nimport s from './profile.module.css'\r\nimport {ProfileType} from \"../../redux/common-types\";\r\n\r\n\r\ntype PropsType = {\r\n    changeAboutMe: (text: string) => void\r\n    user: ProfileType\r\n    isOwner: boolean\r\n    setPhoto: (ev: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nfunction UserInfo({changeAboutMe, user, isOwner, setPhoto}: PropsType) {\r\n    const [text, setText] = useState(user.aboutMe)\r\n    const [isEditMode, changeEditModeTo] = useState(false)\r\n    const imageInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n\r\n    function clickFileInput() {\r\n        if (imageInputRef.current) {\r\n            imageInputRef.current.click()\r\n        }\r\n    }\r\n\r\n    function activateEditMode() {\r\n        if (isOwner) {\r\n            changeEditModeTo(true)\r\n        }\r\n    }\r\n\r\n    function dropChanges() {\r\n        setText(user.aboutMe)\r\n        changeEditModeTo(false)\r\n    }\r\n\r\n    function saveChanges() {\r\n        changeAboutMe(text)\r\n        changeEditModeTo(false)\r\n    }\r\n\r\n    function handleTextChange(ev: ChangeEvent<HTMLTextAreaElement>) {\r\n        setText(ev.target.value)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div className={s.image_space}>\r\n            <img src={user.photo} alt=\"photo\"/>\r\n            {isOwner && <>\r\n                <button onClick={clickFileInput}>Upload image</button>\r\n                <input type=\"file\" style={{display: 'none'}} ref={imageInputRef} onChange={setPhoto}/>\r\n            </>}\r\n        </div>\r\n        <div className={s.about}>\r\n            {isEditMode\r\n                ? <textarea value={text} onChange={handleTextChange} onDoubleClick={dropChanges} onKeyPress={ev => {\r\n                    if (ev.key === 'Enter') {\r\n                        saveChanges()\r\n                    }\r\n                }}/>\r\n                : <p onDoubleClick={activateEditMode}>{user.aboutMe || 'User didn\\'t tell anything about himself'}</p>\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default UserInfo",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":37,"column":8,"nodeType":"128","endLine":37,"endColumn":19,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"127","line":23,"column":8,"nodeType":"128","endLine":23,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":45,"column":28,"nodeType":"133","endLine":45,"endColumn":51},{"ruleId":"134","severity":1,"message":"135","line":15,"column":9,"nodeType":"133","endLine":15,"endColumn":58},{"ruleId":"126","severity":1,"message":"127","line":28,"column":8,"nodeType":"128","endLine":28,"endColumn":21,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":32,"column":8,"nodeType":"128","endLine":32,"endColumn":18,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":41,"column":8,"nodeType":"128","endLine":41,"endColumn":31,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"135","line":49,"column":13,"nodeType":"133","endLine":49,"endColumn":48},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["143"],["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["145"],"React Hook useEffect has missing dependencies: 'currentPage' and 'dispatch'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isLoadingFirstPage'. Either include them or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [articleId, dispatch]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"162","text":"163"},"Update the dependencies array to be: [currentPage, dispatch, username]",{"range":"164","text":"165"},"Update the dependencies array to be: [currentPage, dispatch, isLoadingFirstPage, username]",{"range":"166","text":"167"},[1404,1415],"[articleId, dispatch]",[810,812],"[dispatch]",[1130,1143],"[currentPage, dispatch]",[1441,1451],"[currentPage, dispatch, username]",[1723,1746],"[currentPage, dispatch, isLoadingFirstPage, username]"]