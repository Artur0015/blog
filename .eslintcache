[{"C:\\Users\\user\\WebstormProjects\\blog\\src\\index.tsx":"1","C:\\Users\\user\\WebstormProjects\\blog\\src\\reportWebVitals.ts":"2","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\redux-store.ts":"3","C:\\Users\\user\\WebstormProjects\\blog\\src\\App.tsx":"4","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts":"5","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts":"6","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\profile-reducer.ts":"7","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts":"8","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts":"9","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\users-api.ts":"10","C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts":"11","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\selectors.ts":"12","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx":"13","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx":"14","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\login\\login.tsx":"15","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\navbar\\navbar.tsx":"16","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\write\\write.tsx":"17","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\signup\\signup.tsx":"18","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\error\\error.tsx":"19","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\menu.tsx":"20","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\profile.tsx":"21","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\user-info.tsx":"22","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\page-of-articles.tsx":"23","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comments.tsx":"24","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comment.tsx":"25","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comment-input.tsx":"26","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\error-reducer.ts":"27","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\errors.ts":"28","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page.tsx":"29","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article.tsx":"30","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article-like-dislikes.tsx":"31","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article-text.tsx":"32"},{"size":567,"mtime":1613808397575,"results":"33","hashOfConfig":"34"},{"size":438,"mtime":1613808397584,"results":"35","hashOfConfig":"34"},{"size":939,"mtime":1615718865631,"results":"36","hashOfConfig":"34"},{"size":2305,"mtime":1615903192587,"results":"37","hashOfConfig":"34"},{"size":7245,"mtime":1615833518533,"results":"38","hashOfConfig":"34"},{"size":1420,"mtime":1615811442105,"results":"39","hashOfConfig":"34"},{"size":4268,"mtime":1615876209887,"results":"40","hashOfConfig":"34"},{"size":2856,"mtime":1615879367390,"results":"41","hashOfConfig":"34"},{"size":2437,"mtime":1615828254767,"results":"42","hashOfConfig":"34"},{"size":2202,"mtime":1615887135266,"results":"43","hashOfConfig":"34"},{"size":226,"mtime":1615828119944,"results":"44","hashOfConfig":"34"},{"size":672,"mtime":1615718865557,"results":"45","hashOfConfig":"34"},{"size":1973,"mtime":1615902622208,"results":"46","hashOfConfig":"34"},{"size":243,"mtime":1615706225057,"results":"47","hashOfConfig":"34"},{"size":2896,"mtime":1615984412675,"results":"48","hashOfConfig":"34"},{"size":2531,"mtime":1615818428910,"results":"49","hashOfConfig":"34"},{"size":2366,"mtime":1615914850502,"results":"50","hashOfConfig":"34"},{"size":3700,"mtime":1615990618739,"results":"51","hashOfConfig":"34"},{"size":236,"mtime":1615887292249,"results":"52","hashOfConfig":"34"},{"size":1410,"mtime":1615887316917,"results":"53","hashOfConfig":"34"},{"size":2520,"mtime":1615902575603,"results":"54","hashOfConfig":"34"},{"size":2904,"mtime":1615887246846,"results":"55","hashOfConfig":"34"},{"size":1574,"mtime":1615984884177,"results":"56","hashOfConfig":"34"},{"size":1326,"mtime":1615887204982,"results":"57","hashOfConfig":"34"},{"size":1221,"mtime":1615811621674,"results":"58","hashOfConfig":"34"},{"size":907,"mtime":1615811621702,"results":"59","hashOfConfig":"34"},{"size":735,"mtime":1615811442140,"results":"60","hashOfConfig":"34"},{"size":1590,"mtime":1615899289559,"results":"61","hashOfConfig":"34"},{"size":2688,"mtime":1615899289585,"results":"62","hashOfConfig":"34"},{"size":1584,"mtime":1615899011424,"results":"63","hashOfConfig":"34"},{"size":1161,"mtime":1615899011459,"results":"64","hashOfConfig":"34"},{"size":1390,"mtime":1615915012293,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1y0fs7y",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\user\\WebstormProjects\\blog\\src\\index.tsx",[],["137","138"],"C:\\Users\\user\\WebstormProjects\\blog\\src\\reportWebVitals.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\redux-store.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\App.tsx",["139"],"import './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport './index.css'\r\nimport Write from './components/write/write';\r\nimport Menu from './components/menu/menu';\r\nimport ArticlePage from './components/article/article-page';\r\nimport Navbar from './components/navbar/navbar';\r\nimport Login from './components/login/login';\r\nimport Signup from './components/signup/signup';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Profile from \"./components/profile/profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DispatchType, UserType} from \"./redux/common-types\";\r\nimport {ActionsType, getUserInfo} from \"./redux/reducers/auth-reducer\";\r\nimport {getCurrentUserSelector, getError} from \"./redux/selectors\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\nimport {errorActions, ErrorActionsType} from \"./redux/reducers/error-reducer\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport Error from './components/error/error'\r\n\r\nfunction App() {\r\n\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n    const dispatch = useDispatch<DispatchType<ActionsType | ErrorActionsType>>()\r\n    const user = useSelector<AppStateType, UserType>(getCurrentUserSelector)\r\n    const error = useSelector<AppStateType, string>(getError)\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dispatch(getUserInfo()).then(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (error) {\r\n        setTimeout(() => dispatch(errorActions.deleteError()), 8000)\r\n    }\r\n\r\n    return (<>\r\n        {!!error\r\n            ? <Alert variant=\"filled\" severity=\"error\" className={'errorAlert'}>{error}</Alert>\r\n            : <Navbar/>}\r\n        <Switch>\r\n            <Route exact path='/'><Menu/></Route>\r\n            <Route path='/article/:articleId'><ArticlePage/></Route>\r\n            <Route path='/profile/:username'><Profile/></Route>\r\n            {user.isAuthenticated\r\n                ? <Route exact path='/write'><Write/></Route>\r\n                : <><Route exact path='/login'><Login/></Route>\r\n                    <Route exact path='/signup'><Signup/></Route></>\r\n            }\r\n            <Error />\r\n        </Switch>\r\n    </>)\r\n}\r\n\r\nexport default App;","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\profile-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\users-api.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\selectors.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\login\\login.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\navbar\\navbar.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\write\\write.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\signup\\signup.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\error\\error.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\menu.tsx",["140"],"import {useDispatch, useSelector} from 'react-redux'\r\nimport {ActionsType, getArticlesOfPage} from '../../redux/reducers/menu-reducer'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Preloader from '../preloader/preloader'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {DispatchType} from '../../redux/common-types'\r\nimport {\r\n    getArticlesCountSelector,\r\n    getArticlesOfCurrentPageSelector\r\n} from \"../../redux/selectors\";\r\nimport Error from \"../error/error\";\r\nimport PageOfArticles from \"./page-of-articles\";\r\n\r\n\r\nfunction Menu() {\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    const dispatch = useDispatch<DispatchType<ActionsType>>()\r\n    const location = useLocation()\r\n    const currentPage = parseInt(location.search.slice(6)) || 1\r\n\r\n    const articles = useSelector(getArticlesOfCurrentPageSelector)\r\n    const articlesCount = useSelector(getArticlesCountSelector)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dispatch(getArticlesOfPage(currentPage)).then(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [currentPage])\r\n\r\n    if (isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!articlesCount) {\r\n        return <Error/>\r\n    }\r\n\r\n    return <PageOfArticles withDelete={false} withUsername={true} articles={articles} articlesCount={articlesCount}\r\n                           currentPage={currentPage}/>\r\n}\r\n\r\nexport default Menu","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\profile.tsx",["141","142"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {DispatchType} from \"../../redux/common-types\";\r\nimport {\r\n    ActionsType,\r\n    deleteArticle,\r\n    getUserArticles,\r\n    getUserProfileInfo,\r\n    setMyUserAboutMe,\r\n    setMyUserPhoto\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport {getCurrentUserSelector, getProfileUserSelector} from \"../../redux/selectors\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport Error from \"../error/error\";\r\nimport UserInfo from \"./user-info\";\r\nimport s from './profile.module.css'\r\nimport PageOfArticles from \"../menu/page-of-articles\";\r\n\r\nfunction Profile() {\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    const location = useLocation()\r\n    const currentPage = parseInt(location.search.slice(6)) || 1\r\n    const username = useParams<{ username: string }>().username\r\n\r\n    const currentUser = useSelector(getCurrentUserSelector)\r\n    const profileUser = useSelector(getProfileUserSelector)\r\n    const isOwner = currentUser.username === profileUser.username\r\n    const dispatch = useDispatch<DispatchType<ActionsType>>()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dispatch(getUserProfileInfo(username)).then(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserArticles(username, currentPage))\r\n    }, [currentPage, username])\r\n\r\n\r\n    function changeUserAboutMe(text: string) {\r\n        dispatch(setMyUserAboutMe(profileUser.username, text))\r\n    }\r\n\r\n    function setPhoto({target: {files}}: React.ChangeEvent<HTMLInputElement>) {\r\n        if (files?.length) {\r\n            dispatch(setMyUserPhoto(files[0]))\r\n        }\r\n    }\r\n\r\n    function handleDeleteArticle(articleId: number) {\r\n        dispatch(deleteArticle(articleId))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!profileUser.id) {\r\n        return <Error/>\r\n    }\r\n\r\n    return <>\r\n        <h1 className={s.title}>{profileUser.username}</h1>\r\n        <UserInfo changeAboutMe={changeUserAboutMe} user={profileUser} isOwner={isOwner} setPhoto={setPhoto}/>\r\n        <PageOfArticles withDelete={isOwner} deleteArticle={handleDeleteArticle} withUsername={false}\r\n                        articles={profileUser.articles.data} articlesCount={profileUser.articles.count}\r\n                        currentPage={currentPage}/>\r\n    </>\r\n}\r\n\r\n\r\nexport default Profile","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\profile\\user-info.tsx",["143"],"import React from \"react\";\r\nimport {ChangeEvent, useRef, useState} from \"react\";\r\nimport s from './profile.module.css'\r\nimport {FullProfileType} from \"../../redux/common-types\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\ntype PropsType = {\r\n    changeAboutMe: (text: string) => void\r\n    user: FullProfileType\r\n    isOwner: boolean\r\n    setPhoto: (ev: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nfunction UserInfo({changeAboutMe, user, isOwner, setPhoto}: PropsType) {\r\n    const [text, setText] = useState(user.aboutMe)\r\n    const [isEditMode, changeEditModeTo] = useState(false)\r\n    const imageInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n    function clickFileInput() {\r\n        if (imageInputRef.current) {\r\n            imageInputRef.current.click()\r\n        }\r\n    }\r\n\r\n    function activateEditMode() {\r\n        if (isOwner) {\r\n            changeEditModeTo(true)\r\n        }\r\n    }\r\n\r\n    function dropChanges() {\r\n        setText(user.aboutMe)\r\n        changeEditModeTo(false)\r\n    }\r\n\r\n    function saveChanges() {\r\n        changeAboutMe(text)\r\n        changeEditModeTo(false)\r\n    }\r\n\r\n    function handleTextChange(ev: ChangeEvent<HTMLTextAreaElement>) {\r\n        setText(ev.target.value)\r\n    }\r\n\r\n\r\n    return <div className={s.small + ' ' + s.big}>\r\n        <div className={s.image_space}>\r\n            <img src={user.photo} className={s.photo}/>\r\n            <input type=\"file\" style={{display: 'none'}} ref={imageInputRef} onChange={setPhoto}/>\r\n            {isOwner && <Button variant={'outlined'} onClick={clickFileInput}>Upload</Button>}\r\n        </div>\r\n        <textarea disabled={!isEditMode}\r\n                          placeholder={!isEditMode ? user.aboutMe || 'User didn\\'t tell anything about himself' : ''}\r\n                          value={text}\r\n                          onChange={handleTextChange}/>\r\n        {isOwner &&\r\n        (isEditMode\r\n            ? <>\r\n                <Button onClick={saveChanges}>Save</Button>\r\n                <Button onClick={dropChanges}>Cancel</Button>\r\n            </>\r\n\r\n            : <Button onClick={activateEditMode}>Edit</Button>)}\r\n\r\n    </div>\r\n}\r\n\r\n// return\r\n// <>\r\n// <div className={s.image_space}>\r\n// <img src={user.photo} alt=\"photo\"/>\r\n// {isOwner && <>\r\n// <button onClick={clickFileInput}>Upload image</button>\r\n// <input type=\"file\" style={{display: 'none'}} ref={imageInputRef} onChange={setPhoto}/>\r\n// </>}\r\n// </div>\r\n// <div className={s.about}>\r\n// {isEditMode\r\n//             ? <textarea value={text} onChange={handleTextChange} onDoubleClick={dropChanges} onKeyPress={ev => {\r\n//                 if (ev.key === 'Enter') {\r\n//                     saveChanges()\r\n//                 }\r\n//             }}/>\r\n//             : <p onDoubleClick={activateEditMode}>{user.aboutMe || 'User didn\\'t tell anything about himself'}</p>\r\n//         }\r\n//     </div>\r\n// </>\r\n// }\r\n\r\nexport default UserInfo\r\n\r\n\r\n","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\menu\\page-of-articles.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comments.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comment.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\comments\\comment-input.tsx",["144"],"import {Button, TextareaAutosize, Typography} from \"@material-ui/core\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './comment.module.css'\r\n\r\ntype PropsType = {\r\n    addComment: (text: string) => void\r\n}\r\n\r\nfunction CommentInput({addComment}: PropsType) {\r\n    const [text, setText] = useState('')\r\n\r\n    function handleChange(ev: ChangeEvent<HTMLTextAreaElement>) {\r\n        if (ev.target.value.length < 1000) {\r\n            setText(ev.target.value)\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        addComment(text)\r\n        setText('')\r\n    }\r\n\r\n    return <div className={s.commentInput}>\r\n        <Typography variant={'h5'}>Write comment</Typography>\r\n        <TextareaAutosize onChange={handleChange} value={text} rowsMin={5} />\r\n        <Button onClick={handleClick}>Submit</Button>\r\n    </div>\r\n}\r\n\r\nexport default CommentInput","C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\reducers\\error-reducer.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\redux\\errors.ts",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page.tsx",["145"],"import {\r\n    ActionsType,\r\n    addComment,\r\n    changeArticle, deleteComment, deleteDislike, deleteLike,\r\n    getArticle,\r\n    getArticleComments, putDislike, putLike\r\n} from \"../../redux/reducers/article-reducer\"\r\nimport React, {useEffect, useState} from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport Article from \"./article-page/article\"\r\nimport Comments from \"./comments/comments\"\r\nimport Preloader from \"../preloader/preloader\"\r\nimport {ArticleBodyType, DispatchType} from \"../../redux/common-types\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getArticleCommentsSelector, getArticleSelector, getCurrentUserSelector} from \"../../redux/selectors\";\r\nimport Error from \"../error/error\";\r\n\r\n\r\nfunction ArticlePage() {\r\n    const [isLoadingArticle, setLoadingArticle] = useState(true)\r\n    const [areLoadingComments, setLoadingComments] = useState(true)\r\n\r\n    const dispatch: DispatchType<ActionsType> = useDispatch()\r\n    const articleId = Number(useParams<{ articleId: string }>().articleId)\r\n\r\n    const article = useSelector(getArticleSelector)\r\n    const comments = useSelector(getArticleCommentsSelector)\r\n    const user = useSelector(getCurrentUserSelector)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticle(articleId)).then(() => setLoadingArticle(false))\r\n        dispatch(getArticleComments(articleId)).then(() => setLoadingComments(false))\r\n    }, [articleId])\r\n\r\n\r\n    function handleCommentAdd(commentText: string) {\r\n        dispatch(addComment(articleId, commentText))\r\n    }\r\n\r\n    function handleDeleteComment(commentId: number) {\r\n        dispatch(deleteComment(commentId))\r\n    }\r\n\r\n    function handleArticleSave(article: ArticleBodyType) {\r\n        dispatch(changeArticle(articleId, article))\r\n    }\r\n\r\n    function toggleLike() {\r\n        if (user.isAuthenticated) {\r\n            if (article.isLiked) dispatch(deleteLike(article.id))\r\n            else dispatch(putLike(article.id))\r\n        }\r\n    }\r\n\r\n    function toggleDislike() {\r\n        if (user.isAuthenticated) {\r\n            if (article.isDisliked) dispatch(deleteDislike(article.id))\r\n            else dispatch(putDislike(article.id))\r\n        }\r\n    }\r\n\r\n    if (isLoadingArticle) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!article.id) {\r\n        return <Error/>\r\n    }\r\n\r\n    return <div>\r\n        <Article article={article} changeArticle={handleArticleSave} user={user} toggleLike={toggleLike}\r\n                 toggleDislike={toggleDislike}/>\r\n        <Comments comments={comments} addComment={handleCommentAdd}\r\n                  user={user} deleteComment={handleDeleteComment} areLoading={areLoadingComments}/>\r\n    </div>\r\n}\r\n\r\nexport default ArticlePage","C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article-like-dislikes.tsx",[],"C:\\Users\\user\\WebstormProjects\\blog\\src\\components\\article\\article-page\\article-text.tsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":35,"column":8,"nodeType":"152","endLine":35,"endColumn":10,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"151","line":30,"column":8,"nodeType":"152","endLine":30,"endColumn":21,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":37,"column":8,"nodeType":"152","endLine":37,"endColumn":18,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"151","line":41,"column":8,"nodeType":"152","endLine":41,"endColumn":31,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":49,"column":13,"nodeType":"159","endLine":49,"endColumn":56},{"ruleId":"160","severity":1,"message":"161","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":33,"column":8,"nodeType":"152","endLine":33,"endColumn":19,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["167"],["168"],["169"],["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Preloader' is defined but never used.","Identifier","unusedVar",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [dispatch]",{"range":"182","text":"183"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, username]",{"range":"186","text":"187"},"Update the dependencies array to be: [currentPage, dispatch, username]",{"range":"188","text":"189"},"Update the dependencies array to be: [articleId, dispatch]",{"range":"190","text":"191"},[1456,1458],"[dispatch]",[1074,1087],"[currentPage, dispatch]",[1370,1380],"[dispatch, username]",[1473,1496],"[currentPage, dispatch, username]",[1397,1408],"[articleId, dispatch]"]