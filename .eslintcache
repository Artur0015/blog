[{"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\index.tsx":"1","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\reportWebVitals.ts":"2","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\redux-store.ts":"3","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\App.tsx":"4","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts":"5","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts":"6","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts":"7","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\navigation\\navigtaion-container.tsx":"8","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\write\\write-container.tsx":"9","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\article-container.tsx":"10","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\login\\login-container.tsx":"11","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\menu-container.tsx":"12","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\signup\\signup-container.tsx":"13","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\user-api.ts":"14","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts":"15","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\auth-selector.ts":"16","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\article-selector.ts":"17","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\menu-selector.ts":"18","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\paginator.tsx":"19","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\comments.tsx":"20","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx":"21","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\article.tsx":"22","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx":"23","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts":"24"},{"size":567,"mtime":1611225904550,"results":"25","hashOfConfig":"26"},{"size":438,"mtime":1611225904550,"results":"27","hashOfConfig":"26"},{"size":1231,"mtime":1611225904550,"results":"28","hashOfConfig":"26"},{"size":1174,"mtime":1611225904534,"results":"29","hashOfConfig":"26"},{"size":2453,"mtime":1611326813893,"results":"30","hashOfConfig":"26"},{"size":1532,"mtime":1611335735030,"results":"31","hashOfConfig":"26"},{"size":2779,"mtime":1611338287155,"results":"32","hashOfConfig":"26"},{"size":2008,"mtime":1611326813830,"results":"33","hashOfConfig":"26"},{"size":1973,"mtime":1611225904550,"results":"34","hashOfConfig":"26"},{"size":2196,"mtime":1611337834032,"results":"35","hashOfConfig":"26"},{"size":2443,"mtime":1611326913074,"results":"36","hashOfConfig":"26"},{"size":1541,"mtime":1611225904550,"results":"37","hashOfConfig":"26"},{"size":2667,"mtime":1611326813880,"results":"38","hashOfConfig":"26"},{"size":1245,"mtime":1611335302860,"results":"39","hashOfConfig":"26"},{"size":1576,"mtime":1611326930463,"results":"40","hashOfConfig":"26"},{"size":329,"mtime":1611225904550,"results":"41","hashOfConfig":"26"},{"size":230,"mtime":1611336118558,"results":"42","hashOfConfig":"26"},{"size":306,"mtime":1611225904550,"results":"43","hashOfConfig":"26"},{"size":1153,"mtime":1611225904550,"results":"44","hashOfConfig":"26"},{"size":1360,"mtime":1611225904534,"results":"45","hashOfConfig":"26"},{"size":623,"mtime":1611225904550,"results":"46","hashOfConfig":"26"},{"size":1744,"mtime":1611338128936,"results":"47","hashOfConfig":"26"},{"size":208,"mtime":1611225904550,"results":"48","hashOfConfig":"26"},{"size":185,"mtime":1611229971270,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o0l33o",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\index.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\reportWebVitals.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\redux-store.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\App.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\auth-reducer.ts",["101"],"import { inferActionsType, baseThunkType } from './../redux-store';\r\nimport { userAPI } from \"../../DAL/user-api\"\r\nimport {responseType, userCredentialsType, userType} from \"./reducer-types\";\r\nimport {statusCodes} from \"../../DAL/response-status-codes\";\r\n\r\n\r\nlet initialState = {isAuthenticated: false} as userType\r\n\r\n\r\n\r\nexport const authReducer = (state: userType = initialState, action: actionsType): userType => {\r\n    let stateCopy = { ...state }\r\n    switch (action.type) {\r\n        case 'setUserInfo':\r\n            stateCopy.isAuthenticated = action.user.isAuthenticated\r\n            stateCopy.username = action.user.username\r\n            stateCopy.photo = action.user.photo\r\n            return stateCopy\r\n        case 'deleteUserInfo':\r\n            stateCopy.isAuthenticated = false\r\n            stateCopy.username = null\r\n            stateCopy.photo = null\r\n            return stateCopy\r\n        default:\r\n            return stateCopy\r\n\r\n\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    setUser: (username: string | null, photo: string | null) => ({\r\n        type: 'setUserInfo',\r\n        user: { isAuthenticated: true, username, photo }\r\n    } as const),\r\n    deleteUser: () => ({ type: 'deleteUserInfo' } as const)\r\n}\r\n\r\nexport type actionsType = inferActionsType<typeof actions>\r\n\r\ntype ThunkTypeWithNoReturn = baseThunkType<actionsType>\r\n\r\ntype thunkTypeWithResponseTypeReturn = baseThunkType<actionsType, responseType>\r\n\r\nexport const getUserInfo = (): ThunkTypeWithNoReturn => async (dispatch) => {\r\n    const response = await userAPI.getUserInfo()\r\n    if (response.status === statusCodes.OK){\r\n        dispatch(actions.setUser(response.data.username, response.data.photo))\r\n    }\r\n}\r\n\r\nexport const loginUser = (userCredentials: userCredentialsType): thunkTypeWithResponseTypeReturn => async (dispatch) => {\r\n    let response = await userAPI.loginUser(userCredentials)\r\n    if (response.status === statusCodes.OK) {\r\n        dispatch(actions.setUser(response.data.username, response.data.photo))\r\n    }\r\n    return response.status\r\n}\r\n\r\nexport const logoutUser = (): ThunkTypeWithNoReturn => async (dispatch) => {\r\n    let response = (await userAPI.logoutUser())\r\n    if (response.status === 'OK') {\r\n        dispatch(actions.deleteUser())\r\n    }\r\n\r\n}\r\n\r\nexport const signupUser = (credentials: userCredentialsType): thunkTypeWithResponseTypeReturn => async (dispatch) => {\r\n    const response = await userAPI.signupUser(credentials)\r\n}",["102","103"],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\menu-reducer.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\reducers\\article-reducer.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\navigation\\navigtaion-container.tsx",["104","105","106"],"import React, { useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {actionsType, getUserInfo, logoutUser} from '../../redux/reducers/auth-reducer'\r\nimport {dispatchType} from '../../redux/redux-store'\r\nimport { mstpGetAuthenticationStatus, mstpGetUserPhoto, mstpGetUserUsername } from '../../redux/selectors/auth-selector'\r\nimport cn from \"classnames\";\r\nimport s from \"./navigation.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction NavigationContainer() {\r\n    let [buttonText, setButtonText] = React.useState('>')\r\n    // let [divClass, setDivClass] = React.useState(s.non_active + ' ' + s.nav)\r\n\r\n    const dispatch = useDispatch<dispatchType<actionsType>>()\r\n    const isAuthenticated = useSelector(mstpGetAuthenticationStatus)\r\n    const photo = useSelector(mstpGetUserPhoto)\r\n    const username = useSelector(mstpGetUserUsername)\r\n    useEffect(() => {\r\n        dispatch(getUserInfo())\r\n    }, [])\r\n\r\n\r\n    function handleClick() {\r\n        if (buttonText === '>') {\r\n            setButtonText('<')\r\n            // setDivClass(s.nav)\r\n        } else {\r\n            setButtonText('>')\r\n            // setDivClass(s.non_active + ' ' + s.nav)\r\n        }\r\n    }\r\n\r\n    function handleLogoutClick() {\r\n        dispatch(logoutUser())\r\n    }\r\n\r\n    return <><div className={cn({ [s.non_active]: buttonText === '>' }, s.nav)}>\r\n        <button onClick={handleClick}>{buttonText}</button>\r\n        {photo ? <img src={photo} />: null}\r\n        <NavLink to='/menu' activeClassName={s.active}>Menu</NavLink>\r\n        {(isAuthenticated)\r\n            ? <><NavLink to='/logout' activeClassName={s.active} onClick={handleLogoutClick}>Log Out</NavLink>\r\n                <NavLink to='/write' activeClassName={s.active}>Write</NavLink></>\r\n            : <><NavLink to='/login' activeClassName={s.active}>Log in</NavLink>\r\n                <NavLink to='/signup' activeClassName={s.active}>Sign up</NavLink></>}\r\n    </div></>\r\n}\r\n\r\n\r\nexport default NavigationContainer","C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\write\\write-container.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\article-container.tsx",["107","108"],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\login\\login-container.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\menu-container.tsx",["109"],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\signup\\signup-container.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\user-api.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\articles-api.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\auth-selector.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\article-selector.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\redux\\selectors\\menu-selector.ts",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\paginator.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\comments.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\menu\\post.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\article\\article.tsx",["110"],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\components\\preloader\\preloader.tsx",[],"C:\\Users\\mr_as\\WebstormProjects\\blog\\src\\DAL\\response-status-codes.ts",[],{"ruleId":"111","severity":1,"message":"112","line":71,"column":11,"nodeType":"113","messageId":"114","endLine":71,"endColumn":19},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":18,"column":11,"nodeType":"113","messageId":"114","endLine":18,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":22,"column":8,"nodeType":"122","endLine":22,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":41,"column":18,"nodeType":"126","endLine":41,"endColumn":37},{"ruleId":"111","severity":1,"message":"127","line":14,"column":9,"nodeType":"113","messageId":"114","endLine":14,"endColumn":28},{"ruleId":"120","severity":1,"message":"128","line":39,"column":8,"nodeType":"122","endLine":39,"endColumn":10,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"121","line":28,"column":8,"nodeType":"122","endLine":28,"endColumn":21,"suggestions":"130"},{"ruleId":"111","severity":1,"message":"131","line":2,"column":29,"nodeType":"113","messageId":"114","endLine":2,"endColumn":40},"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mstpGetUserUsername' is defined but never used.","React Hook useEffect has missing dependencies: 'articleId' and 'dispatch'. Either include them or remove the dependency array.",["135"],["136"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [dispatch]",{"range":"143","text":"144"},"Update the dependencies array to be: [articleId, dispatch]",{"range":"145","text":"146"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"147","text":"148"},[957,959],"[dispatch]",[1523,1525],"[articleId, dispatch]",[1131,1144],"[currentPage, dispatch]"]